package com.jet.project.endpoints;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.ParseException;

import com.google.api.server.spi.config.Api;
import com.google.api.server.spi.config.ApiMethod;
import com.google.api.server.spi.config.ApiMethod.HttpMethod;
import com.google.api.server.spi.response.InternalServerErrorException;
import com.google.api.server.spi.response.ServiceUnavailableException;
import com.jet.project.service.Feeds;
import com.jet.project.service.FeedsFactory;
import com.project.enums.FeedsType;

@Api(name = "entity")
public class GoogleActivityEndpoint {
	private Feeds feeds;
	@ApiMethod(name = "google.activities.save", path = "gact_save", httpMethod = HttpMethod.POST)
	public JSONObject getGoogleActivitiesFeeds() throws Exception{
		JSONObject feeds = new JSONObject();
		try {
			System.out.println();
		} catch (Exception e) {
			handleErrors(e);
		}
		return feeds;
	}
	
	@ApiMethod(name = "twitter", path = "twitter_save")
	public JSONArray getTwitterFeeds() throws Exception{
		JSONArray feeds = new JSONArray();
		try {
			feeds = FeedsFactory.getFeeds(FeedsType.TWITTER);
		
		
		} catch (Exception e) {
			
			handleErrors(e);
		}
		
		return feeds;
	}
	
	private void handleErrors(Exception e) throws Exception{
		if(e instanceof ParseException){
			e.printStackTrace();
			throw new ServiceUnavailableException("Something is wrong with google activities service");
		}
		else{
			e.printStackTrace();
			throw new InternalServerErrorException("Something is wrong with our server. Please try again later");
		}
	}
}
