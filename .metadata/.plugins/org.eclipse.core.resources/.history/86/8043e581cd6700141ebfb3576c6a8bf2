package com.jet.project.util;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

public class UrlUtil {
	public static final JSONArray consumeJSONResponse(HttpURLConnection conn) throws ParseException, IOException{
		
		conn.setRequestMethod("GET");
		conn.setRequestProperty("Accept", "application/json");

		if (conn.getResponseCode() != 200) {
			throw new RuntimeException("Failed : HTTP error code : "
					+ conn.getResponseCode());
		}

		BufferedReader br = new BufferedReader(new InputStreamReader(
				(conn.getInputStream())));

		String output;

		StringBuilder builder = new StringBuilder();
		while ((output = br.readLine()) != null) {

			builder.append(output);
		}

		conn.disconnect();

		JSONParser jsonParser = new JSONParser();
		
		Object o = jsonParser.parse(builder.toString());
		return (JSONArray)o;
		/*if (o instanceof JSONObject) {
			System.out.println("JSON Object .... \n");
			//System.out.println(builder.toString());
			JSONArray json = new JSONArray();
			json.add(o);
			return json;
			//return builder.toString();
		}
		else if(o instanceof JSONArray){
			System.out.println("JSON Array .... \n");
			System.out.println(o.toString());
			return (JSONArray)o;
		}
		else{
			throw new IllegalArgumentException("Expected JSONObject, got " + o + " from ");
		}*/

	}
	
	
		
		
	
	// Writes a request to a connection
		public static void writeRequest(HttpURLConnection connection,
		        String textBody) throws IOException {
	
		        BufferedWriter wr = new BufferedWriter(new OutputStreamWriter(
		                connection.getOutputStream()));
		        wr.write(textBody);
		        wr.flush();
		        wr.close();

		   
		}

		// Reads a response for a given connection and returns it as a string.
		public static String readResponse(HttpURLConnection connection) {
		    try {
		        StringBuilder str = new StringBuilder();

		        BufferedReader br = new BufferedReader(new InputStreamReader(
		                connection.getInputStream()));
		        String line = "";
		        while ((line = br.readLine()) != null) {
		            str.append(line + System.getProperty("line.separator"));
		        }
		        return str.toString();
		    } catch (IOException e) {
		        return new String();
		    }
		}
}
